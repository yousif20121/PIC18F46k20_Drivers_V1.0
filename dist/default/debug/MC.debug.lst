

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 15 17:37:08 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 21/07/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F46K20 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     
    61                           	psect	idataCOMRAM
    62   00103C                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for _keypad_btn_values
    66   00103C  37                 	db	55
    67   00103D  38                 	db	56
    68   00103E  39                 	db	57
    69   00103F  2F                 	db	47
    70   001040  34                 	db	52
    71   001041  35                 	db	53
    72   001042  36                 	db	54
    73   001043  2A                 	db	42
    74   001044  31                 	db	49
    75   001045  32                 	db	50
    76   001046  33                 	db	51
    77   001047  2D                 	db	45
    78   001048  23                 	db	35
    79   001049  30                 	db	48
    80   00104A  3D                 	db	61
    81   00104B  2B                 	db	43
    82                           
    83                           ;initializer for _PORT_REG
    84   00104C  80                 	db	128
    85   00104D  0F                 	db	15
    86   00104E  81                 	db	129
    87   00104F  0F                 	db	15
    88   001050  82                 	db	130
    89   001051  0F                 	db	15
    90   001052  83                 	db	131
    91   001053  0F                 	db	15
    92   001054  84                 	db	132
    93   001055  0F                 	db	15
    94                           
    95                           ;initializer for _LAT_REG
    96   001056  89                 	db	137
    97   001057  0F                 	db	15
    98   001058  8A                 	db	138
    99   001059  0F                 	db	15
   100   00105A  8B                 	db	139
   101   00105B  0F                 	db	15
   102   00105C  8C                 	db	140
   103   00105D  0F                 	db	15
   104   00105E  8D                 	db	141
   105   00105F  0F                 	db	15
   106                           
   107                           ;initializer for _TRIS_REG
   108   001060  92                 	db	146
   109   001061  0F                 	db	15
   110   001062  93                 	db	147
   111   001063  0F                 	db	15
   112   001064  94                 	db	148
   113   001065  0F                 	db	15
   114   001066  95                 	db	149
   115   001067  0F                 	db	15
   116   001068  96                 	db	150
   117   001069  0F                 	db	15
   118                           
   119                           ;initializer for _RB7_Flag
   120   00106A  01                 	db	1
   121                           
   122                           ;initializer for _RB6_Flag
   123   00106B  01                 	db	1
   124                           
   125                           ;initializer for _RB5_Flag
   126   00106C  01                 	db	1
   127                           
   128                           ;initializer for _RB4_Flag
   129   00106D  01                 	db	1
   130   000000                     _INTCON2bits	set	4081
   131   000000                     _EECON2	set	4007
   132   000000                     _ADCON1bits	set	4033
   133   000000                     _ADRESL	set	4035
   134   000000                     _ADRESH	set	4036
   135   000000                     _TRISD	set	3989
   136   000000                     _TRISC	set	3988
   137   000000                     _TRISB	set	3987
   138   000000                     _TRISE	set	3990
   139   000000                     _PORTBbits	set	3969
   140   000000                     _PIR1bits	set	3998
   141   000000                     _ADCON2bits	set	4032
   142   000000                     _ADCON0bits	set	4034
   143   000000                     _PORTA	set	3968
   144   000000                     _LATA	set	3977
   145   000000                     _TRISA	set	3986
   146   000000                     _EECON1bits	set	4006
   147   000000                     _EEDATA	set	4008
   148   000000                     _EEADR	set	4009
   149   000000                     _EEADRH	set	4010
   150   000000                     _RCONbits	set	4048
   151   000000                     _INTCON3bits	set	4080
   152   000000                     _INTCONbits	set	4082
   153   000000                     _LATE	set	3981
   154   000000                     _LATD	set	3980
   155   000000                     _LATC	set	3979
   156   000000                     _LATB	set	3978
   157   000000                     _PORTE	set	3972
   158   000000                     _PORTD	set	3971
   159   000000                     _PORTC	set	3970
   160   000000                     _PORTB	set	3969
   161                           
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165   001002                     __pcinit:
   166                           	callstack 0
   167   001002                     start_initialization:
   168                           	callstack 0
   169   001002                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Initialize objects allocated to COMRAM (50 bytes)
   173                           ; load TBLPTR registers with __pidataCOMRAM
   174   001002  0E3C               	movlw	low __pidataCOMRAM
   175   001004  6EF6               	movwf	tblptrl,c
   176   001006  0E10               	movlw	high __pidataCOMRAM
   177   001008  6EF7               	movwf	tblptrh,c
   178   00100A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   179   00100C  6EF8               	movwf	tblptru,c
   180   00100E  EE00  F001         	lfsr	0,__pdataCOMRAM
   181   001012  EE10 F032          	lfsr	1,50
   182   001016                     copy_data0:
   183   001016  0009               	tblrd		*+
   184   001018  CFF5 FFEE          	movff	tablat,postinc0
   185   00101C  50E5               	movf	postdec1,w,c
   186   00101E  50E1               	movf	fsr1l,w,c
   187   001020  E1FA               	bnz	copy_data0
   188                           
   189                           ; Clear objects allocated to COMRAM (31 bytes)
   190   001022  EE00  F033         	lfsr	0,__pbssCOMRAM
   191   001026  0E1F               	movlw	31
   192   001028                     clear_0:
   193   001028  6AEE               	clrf	postinc0,c
   194   00102A  06E8               	decf	wreg,f,c
   195   00102C  E1FD               	bnz	clear_0
   196   00102E                     end_of_initialization:
   197                           	callstack 0
   198   00102E                     __end_of__initialization:
   199                           	callstack 0
   200   00102E  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   201   001030  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   202   001032  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203   001034  6EF8               	movwf	tblptru,c
   204   001036  0100               	movlb	0
   205   001038  EF6B  F008         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208   000033                     __pbssCOMRAM:
   209                           	callstack 0
   210   000033                     _RB7_InterruptHandler_LOW:
   211                           	callstack 0
   212   000033                     	ds	2
   213   000035                     _RB7_InterruptHandler_HIGH:
   214                           	callstack 0
   215   000035                     	ds	2
   216   000037                     _RB6_InterruptHandler_LOW:
   217                           	callstack 0
   218   000037                     	ds	2
   219   000039                     _RB6_InterruptHandler_HIGH:
   220                           	callstack 0
   221   000039                     	ds	2
   222   00003B                     _RB5_InterruptHandler_LOW:
   223                           	callstack 0
   224   00003B                     	ds	2
   225   00003D                     _RB5_InterruptHandler_HIGH:
   226                           	callstack 0
   227   00003D                     	ds	2
   228   00003F                     _RB4_InterruptHandler_LOW:
   229                           	callstack 0
   230   00003F                     	ds	2
   231   000041                     _RB4_InterruptHandler_HIGH:
   232                           	callstack 0
   233   000041                     	ds	2
   234   000043                     _INT2_InterruptHandler:
   235                           	callstack 0
   236   000043                     	ds	2
   237   000045                     _INT1_InterruptHandler:
   238                           	callstack 0
   239   000045                     	ds	2
   240   000047                     _INT0_InterruptHandler:
   241                           	callstack 0
   242   000047                     	ds	2
   243   000049                     _ADC_InterruptHandler:
   244                           	callstack 0
   245   000049                     	ds	2
   246   00004B                     ECU_RELAY_OFF@F3314:
   247                           	callstack 0
   248   00004B                     	ds	1
   249   00004C                     ECU_RELAY_ONN@F3309:
   250                           	callstack 0
   251   00004C                     	ds	1
   252   00004D                     ECU_RELAY_Init@F3304:
   253                           	callstack 0
   254   00004D                     	ds	1
   255   00004E                     ECU_LED_TOGGLE@F3325:
   256                           	callstack 0
   257   00004E                     	ds	1
   258   00004F                     ECU_LED_OFF@F3320:
   259                           	callstack 0
   260   00004F                     	ds	1
   261   000050                     ECU_LED_ON@F3315:
   262                           	callstack 0
   263   000050                     	ds	1
   264   000051                     ECU_LED_Init@F3310:
   265                           	callstack 0
   266   000051                     	ds	1
   267                           
   268                           	psect	dataCOMRAM
   269   000001                     __pdataCOMRAM:
   270                           	callstack 0
   271   000001                     _keypad_btn_values:
   272                           	callstack 0
   273   000001                     	ds	16
   274   000011                     _PORT_REG:
   275                           	callstack 0
   276   000011                     	ds	10
   277   00001B                     _LAT_REG:
   278                           	callstack 0
   279   00001B                     	ds	10
   280   000025                     _TRIS_REG:
   281                           	callstack 0
   282   000025                     	ds	10
   283   00002F                     _RB7_Flag:
   284                           	callstack 0
   285   00002F                     	ds	1
   286   000030                     _RB6_Flag:
   287                           	callstack 0
   288   000030                     	ds	1
   289   000031                     _RB5_Flag:
   290                           	callstack 0
   291   000031                     	ds	1
   292   000032                     _RB4_Flag:
   293                           	callstack 0
   294   000032                     	ds	1
   295                           
   296                           	psect	cstackCOMRAM
   297   000052                     __pcstackCOMRAM:
   298                           	callstack 0
   299   000052                     RB4_ISR@RB4_Source:
   300                           	callstack 0
   301   000052                     RB5_ISR@RB5_Source:
   302                           	callstack 0
   303   000052                     RB6_ISR@RB6_Source:
   304                           	callstack 0
   305   000052                     RB7_ISR@RB7_Source:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x0
   309   000052                     	ds	1
   310   000053                     
   311                           ; 1 bytes @ 0x1
   312 ;;
   313 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   314 ;;
   315 ;; *************** function _main *****************
   316 ;; Defined at:
   317 ;;		line 11 in file "app.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;                  2  693[None  ] int 
   324 ;; Registers used:
   325 ;;		cstack
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;Total ram usage:        0 bytes
   336 ;; Hardware stack levels required when called: 3
   337 ;; This function calls:
   338 ;;		__Init
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           	psect	text0
   345   0010D6                     __ptext0:
   346                           	callstack 0
   347   0010D6                     _main:
   348                           	callstack 28
   349   0010D6                     
   350                           ;app.c: 13:     _Init();
   351   0010D6  EC77  F008         	call	__Init	;wreg free
   352   0010DA                     l694:
   353   0010DA  EF6D  F008         	goto	l694
   354   0010DE  EF47  F001         	goto	start
   355   0010E2                     __end_of_main:
   356                           	callstack 0
   357                           
   358 ;; *************** function __Init *****************
   359 ;; Defined at:
   360 ;;		line 22 in file "app.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		None
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels used: 1
   380 ;; Hardware stack levels required when called: 2
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           	psect	text1
   389   0010EE                     __ptext1:
   390                           	callstack 0
   391   0010EE                     __Init:
   392                           	callstack 28
   393   0010EE  0012               	return		;funcret
   394   0010F0                     __end_of__Init:
   395                           	callstack 0
   396                           
   397 ;; *************** function _InterruptManager *****************
   398 ;; Defined at:
   399 ;;		line 62 in file "MCAL/Interrupt/INT_MANAGER.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels used: 1
   419 ;; Hardware stack levels required when called: 1
   420 ;; This function calls:
   421 ;;		_INT0_ISR
   422 ;;		_INT1_ISR
   423 ;;		_INT2_ISR
   424 ;;		_RB4_ISR
   425 ;;		_RB5_ISR
   426 ;;		_RB6_ISR
   427 ;;		_RB7_ISR
   428 ;; This function is called by:
   429 ;;		Interrupt level 2
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	intcode
   434   000008                     __pintcode:
   435                           	callstack 0
   436   000008                     _InterruptManager:
   437                           	callstack 28
   438                           
   439                           ;incstack = 0
   440   000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   441   00000A                     
   442                           ;MCAL/Interrupt/INT_MANAGER.c: 64:     if((1 == INTCONbits.INT0IE) && (1 == INTCONbits.I
      +                          NT0IF)) {
   443   00000A  A8F2               	btfss	242,4,c	;volatile
   444   00000C  EF0A  F000         	goto	i2u135_41
   445   000010  EF0C  F000         	goto	i2u135_40
   446   000014                     i2u135_41:
   447   000014  EF15  F000         	goto	i2l666
   448   000018                     i2u135_40:
   449   000018  A2F2               	btfss	242,1,c	;volatile
   450   00001A  EF11  F000         	goto	i2u136_41
   451   00001E  EF13  F000         	goto	i2u136_40
   452   000022                     i2u136_41:
   453   000022  EF15  F000         	goto	i2l666
   454   000026                     i2u136_40:
   455   000026                     
   456                           ;MCAL/Interrupt/INT_MANAGER.c: 65:         INT0_ISR();
   457   000026  EC75  F008         	call	_INT0_ISR	;wreg free
   458   00002A                     i2l666:
   459                           
   460                           ;MCAL/Interrupt/INT_MANAGER.c: 69:     if((1 == INTCON3bits.INT1IE) && (1 == INTCON3bits
      +                          .INT1IF)) {
   461   00002A  A6F0               	btfss	240,3,c	;volatile
   462   00002C  EF1A  F000         	goto	i2u137_41
   463   000030  EF1C  F000         	goto	i2u137_40
   464   000034                     i2u137_41:
   465   000034  EF25  F000         	goto	i2l668
   466   000038                     i2u137_40:
   467   000038  A0F0               	btfss	240,0,c	;volatile
   468   00003A  EF21  F000         	goto	i2u138_41
   469   00003E  EF23  F000         	goto	i2u138_40
   470   000042                     i2u138_41:
   471   000042  EF25  F000         	goto	i2l668
   472   000046                     i2u138_40:
   473   000046                     
   474                           ;MCAL/Interrupt/INT_MANAGER.c: 70:         INT1_ISR();
   475   000046  EC73  F008         	call	_INT1_ISR	;wreg free
   476   00004A                     i2l668:
   477                           
   478                           ;MCAL/Interrupt/INT_MANAGER.c: 74:     if((1 == INTCON3bits.INT2IE) && (1 == INTCON3bits
      +                          .INT2IF)) {
   479   00004A  A8F0               	btfss	240,4,c	;volatile
   480   00004C  EF2A  F000         	goto	i2u139_41
   481   000050  EF2C  F000         	goto	i2u139_40
   482   000054                     i2u139_41:
   483   000054  EF35  F000         	goto	i2l670
   484   000058                     i2u139_40:
   485   000058  A2F0               	btfss	240,1,c	;volatile
   486   00005A  EF31  F000         	goto	i2u140_41
   487   00005E  EF33  F000         	goto	i2u140_40
   488   000062                     i2u140_41:
   489   000062  EF35  F000         	goto	i2l670
   490   000066                     i2u140_40:
   491   000066                     
   492                           ;MCAL/Interrupt/INT_MANAGER.c: 75:         INT2_ISR();
   493   000066  EC71  F008         	call	_INT2_ISR	;wreg free
   494   00006A                     i2l670:
   495                           
   496                           ;MCAL/Interrupt/INT_MANAGER.c: 81:     if((1 == INTCONbits.RBIE) && (1 == INTCONbits.RBI
      +                          F) && (PORTBbits.RB4 == GPIO_HIGH) && (1 == RB4_Flag)) {
   497   00006A  A6F2               	btfss	242,3,c	;volatile
   498   00006C  EF3A  F000         	goto	i2u141_41
   499   000070  EF3C  F000         	goto	i2u141_40
   500   000074                     i2u141_41:
   501   000074  EF57  F000         	goto	i2l672
   502   000078                     i2u141_40:
   503   000078  A0F2               	btfss	242,0,c	;volatile
   504   00007A  EF41  F000         	goto	i2u142_41
   505   00007E  EF43  F000         	goto	i2u142_40
   506   000082                     i2u142_41:
   507   000082  EF57  F000         	goto	i2l672
   508   000086                     i2u142_40:
   509   000086  A881               	btfss	129,4,c	;volatile
   510   000088  EF48  F000         	goto	i2u143_41
   511   00008C  EF4A  F000         	goto	i2u143_40
   512   000090                     i2u143_41:
   513   000090  EF57  F000         	goto	i2l672
   514   000094                     i2u143_40:
   515   000094  0432               	decf	_RB4_Flag^0,w,c	;volatile
   516   000096  A4D8               	btfss	status,2,c
   517   000098  EF50  F000         	goto	i2u144_41
   518   00009C  EF52  F000         	goto	i2u144_40
   519   0000A0                     i2u144_41:
   520   0000A0  EF57  F000         	goto	i2l672
   521   0000A4                     i2u144_40:
   522   0000A4                     
   523                           ;MCAL/Interrupt/INT_MANAGER.c: 82:         RB4_Flag = 0;
   524   0000A4  0E00               	movlw	0
   525   0000A6  6E32               	movwf	_RB4_Flag^0,c	;volatile
   526   0000A8                     
   527                           ;MCAL/Interrupt/INT_MANAGER.c: 83:         RB4_ISR(0);
   528   0000A8  0E00               	movlw	0
   529   0000AA  EC5E  F008         	call	_RB4_ISR
   530   0000AE                     i2l672:
   531                           
   532                           ;MCAL/Interrupt/INT_MANAGER.c: 86:     if((1 == INTCONbits.RBIE) && (1 == INTCONbits.RBI
      +                          F) && (PORTBbits.RB4 == GPIO_LOW) && (0 == RB4_Flag)) {
   533   0000AE  A6F2               	btfss	242,3,c	;volatile
   534   0000B0  EF5C  F000         	goto	i2u145_41
   535   0000B4  EF5E  F000         	goto	i2u145_40
   536   0000B8                     i2u145_41:
   537   0000B8  EF79  F000         	goto	i2l674
   538   0000BC                     i2u145_40:
   539   0000BC  A0F2               	btfss	242,0,c	;volatile
   540   0000BE  EF63  F000         	goto	i2u146_41
   541   0000C2  EF65  F000         	goto	i2u146_40
   542   0000C6                     i2u146_41:
   543   0000C6  EF79  F000         	goto	i2l674
   544   0000CA                     i2u146_40:
   545   0000CA  B881               	btfsc	129,4,c	;volatile
   546   0000CC  EF6A  F000         	goto	i2u147_41
   547   0000D0  EF6C  F000         	goto	i2u147_40
   548   0000D4                     i2u147_41:
   549   0000D4  EF79  F000         	goto	i2l674
   550   0000D8                     i2u147_40:
   551   0000D8  5032               	movf	_RB4_Flag^0,w,c	;volatile
   552   0000DA  A4D8               	btfss	status,2,c
   553   0000DC  EF72  F000         	goto	i2u148_41
   554   0000E0  EF74  F000         	goto	i2u148_40
   555   0000E4                     i2u148_41:
   556   0000E4  EF79  F000         	goto	i2l674
   557   0000E8                     i2u148_40:
   558   0000E8                     
   559                           ;MCAL/Interrupt/INT_MANAGER.c: 87:         RB4_Flag = 1;
   560   0000E8  0E01               	movlw	1
   561   0000EA  6E32               	movwf	_RB4_Flag^0,c	;volatile
   562   0000EC                     
   563                           ;MCAL/Interrupt/INT_MANAGER.c: 88:         RB4_ISR(1);
   564   0000EC  0E01               	movlw	1
   565   0000EE  EC5E  F008         	call	_RB4_ISR
   566   0000F2                     i2l674:
   567                           
   568                           ;MCAL/Interrupt/INT_MANAGER.c: 93:     if((1 == INTCONbits.RBIE) && (1 == INTCONbits.RBI
      +                          F) && (PORTBbits.RB5 == GPIO_HIGH) && (1 == RB5_Flag)) {
   569   0000F2  A6F2               	btfss	242,3,c	;volatile
   570   0000F4  EF7E  F000         	goto	i2u149_41
   571   0000F8  EF80  F000         	goto	i2u149_40
   572   0000FC                     i2u149_41:
   573   0000FC  EF9B  F000         	goto	i2l676
   574   000100                     i2u149_40:
   575   000100  A0F2               	btfss	242,0,c	;volatile
   576   000102  EF85  F000         	goto	i2u150_41
   577   000106  EF87  F000         	goto	i2u150_40
   578   00010A                     i2u150_41:
   579   00010A  EF9B  F000         	goto	i2l676
   580   00010E                     i2u150_40:
   581   00010E  AA81               	btfss	129,5,c	;volatile
   582   000110  EF8C  F000         	goto	i2u151_41
   583   000114  EF8E  F000         	goto	i2u151_40
   584   000118                     i2u151_41:
   585   000118  EF9B  F000         	goto	i2l676
   586   00011C                     i2u151_40:
   587   00011C  0431               	decf	_RB5_Flag^0,w,c	;volatile
   588   00011E  A4D8               	btfss	status,2,c
   589   000120  EF94  F000         	goto	i2u152_41
   590   000124  EF96  F000         	goto	i2u152_40
   591   000128                     i2u152_41:
   592   000128  EF9B  F000         	goto	i2l676
   593   00012C                     i2u152_40:
   594   00012C                     
   595                           ;MCAL/Interrupt/INT_MANAGER.c: 94:         RB5_Flag = 0;
   596   00012C  0E00               	movlw	0
   597   00012E  6E31               	movwf	_RB5_Flag^0,c	;volatile
   598   000130                     
   599                           ;MCAL/Interrupt/INT_MANAGER.c: 95:         RB5_ISR(0);
   600   000130  0E00               	movlw	0
   601   000132  EC51  F008         	call	_RB5_ISR
   602   000136                     i2l676:
   603                           
   604                           ;MCAL/Interrupt/INT_MANAGER.c: 99:     if((1 == INTCONbits.RBIE) && (1 == INTCONbits.RBI
      +                          F) && (PORTBbits.RB5 == GPIO_LOW) && (0 == RB5_Flag)) {
   605   000136  A6F2               	btfss	242,3,c	;volatile
   606   000138  EFA0  F000         	goto	i2u153_41
   607   00013C  EFA2  F000         	goto	i2u153_40
   608   000140                     i2u153_41:
   609   000140  EFBD  F000         	goto	i2l678
   610   000144                     i2u153_40:
   611   000144  A0F2               	btfss	242,0,c	;volatile
   612   000146  EFA7  F000         	goto	i2u154_41
   613   00014A  EFA9  F000         	goto	i2u154_40
   614   00014E                     i2u154_41:
   615   00014E  EFBD  F000         	goto	i2l678
   616   000152                     i2u154_40:
   617   000152  BA81               	btfsc	129,5,c	;volatile
   618   000154  EFAE  F000         	goto	i2u155_41
   619   000158  EFB0  F000         	goto	i2u155_40
   620   00015C                     i2u155_41:
   621   00015C  EFBD  F000         	goto	i2l678
   622   000160                     i2u155_40:
   623   000160  5031               	movf	_RB5_Flag^0,w,c	;volatile
   624   000162  A4D8               	btfss	status,2,c
   625   000164  EFB6  F000         	goto	i2u156_41
   626   000168  EFB8  F000         	goto	i2u156_40
   627   00016C                     i2u156_41:
   628   00016C  EFBD  F000         	goto	i2l678
   629   000170                     i2u156_40:
   630   000170                     
   631                           ;MCAL/Interrupt/INT_MANAGER.c: 100:         RB5_Flag = 1;
   632   000170  0E01               	movlw	1
   633   000172  6E31               	movwf	_RB5_Flag^0,c	;volatile
   634   000174                     
   635                           ;MCAL/Interrupt/INT_MANAGER.c: 101:         RB5_ISR(1);
   636   000174  0E01               	movlw	1
   637   000176  EC51  F008         	call	_RB5_ISR
   638   00017A                     i2l678:
   639                           
   640                           ;MCAL/Interrupt/INT_MANAGER.c: 106:     if((1 == INTCONbits.RBIE) && (1 == INTCONbits.RB
      +                          IF) && (PORTBbits.RB6 == GPIO_HIGH) && (1 == RB6_Flag)) {
   641   00017A  A6F2               	btfss	242,3,c	;volatile
   642   00017C  EFC2  F000         	goto	i2u157_41
   643   000180  EFC4  F000         	goto	i2u157_40
   644   000184                     i2u157_41:
   645   000184  EFDF  F000         	goto	i2l680
   646   000188                     i2u157_40:
   647   000188  A0F2               	btfss	242,0,c	;volatile
   648   00018A  EFC9  F000         	goto	i2u158_41
   649   00018E  EFCB  F000         	goto	i2u158_40
   650   000192                     i2u158_41:
   651   000192  EFDF  F000         	goto	i2l680
   652   000196                     i2u158_40:
   653   000196  AC81               	btfss	129,6,c	;volatile
   654   000198  EFD0  F000         	goto	i2u159_41
   655   00019C  EFD2  F000         	goto	i2u159_40
   656   0001A0                     i2u159_41:
   657   0001A0  EFDF  F000         	goto	i2l680
   658   0001A4                     i2u159_40:
   659   0001A4  0430               	decf	_RB6_Flag^0,w,c	;volatile
   660   0001A6  A4D8               	btfss	status,2,c
   661   0001A8  EFD8  F000         	goto	i2u160_41
   662   0001AC  EFDA  F000         	goto	i2u160_40
   663   0001B0                     i2u160_41:
   664   0001B0  EFDF  F000         	goto	i2l680
   665   0001B4                     i2u160_40:
   666   0001B4                     
   667                           ;MCAL/Interrupt/INT_MANAGER.c: 107:         RB6_Flag = 0;
   668   0001B4  0E00               	movlw	0
   669   0001B6  6E30               	movwf	_RB6_Flag^0,c	;volatile
   670   0001B8                     
   671                           ;MCAL/Interrupt/INT_MANAGER.c: 108:         RB6_ISR(0);
   672   0001B8  0E00               	movlw	0
   673   0001BA  EC44  F008         	call	_RB6_ISR
   674   0001BE                     i2l680:
   675                           
   676                           ;MCAL/Interrupt/INT_MANAGER.c: 112:     if((1 == INTCONbits.RBIE) && (1 == INTCONbits.RB
      +                          IF) && (PORTBbits.RB6 == GPIO_LOW) && (0 == RB6_Flag)) {
   677   0001BE  A6F2               	btfss	242,3,c	;volatile
   678   0001C0  EFE4  F000         	goto	i2u161_41
   679   0001C4  EFE6  F000         	goto	i2u161_40
   680   0001C8                     i2u161_41:
   681   0001C8  EF01  F001         	goto	i2l682
   682   0001CC                     i2u161_40:
   683   0001CC  A0F2               	btfss	242,0,c	;volatile
   684   0001CE  EFEB  F000         	goto	i2u162_41
   685   0001D2  EFED  F000         	goto	i2u162_40
   686   0001D6                     i2u162_41:
   687   0001D6  EF01  F001         	goto	i2l682
   688   0001DA                     i2u162_40:
   689   0001DA  BC81               	btfsc	129,6,c	;volatile
   690   0001DC  EFF2  F000         	goto	i2u163_41
   691   0001E0  EFF4  F000         	goto	i2u163_40
   692   0001E4                     i2u163_41:
   693   0001E4  EF01  F001         	goto	i2l682
   694   0001E8                     i2u163_40:
   695   0001E8  5030               	movf	_RB6_Flag^0,w,c	;volatile
   696   0001EA  A4D8               	btfss	status,2,c
   697   0001EC  EFFA  F000         	goto	i2u164_41
   698   0001F0  EFFC  F000         	goto	i2u164_40
   699   0001F4                     i2u164_41:
   700   0001F4  EF01  F001         	goto	i2l682
   701   0001F8                     i2u164_40:
   702   0001F8                     
   703                           ;MCAL/Interrupt/INT_MANAGER.c: 113:         RB6_Flag = 1;
   704   0001F8  0E01               	movlw	1
   705   0001FA  6E30               	movwf	_RB6_Flag^0,c	;volatile
   706   0001FC                     
   707                           ;MCAL/Interrupt/INT_MANAGER.c: 114:         RB6_ISR(1);
   708   0001FC  0E01               	movlw	1
   709   0001FE  EC44  F008         	call	_RB6_ISR
   710   000202                     i2l682:
   711                           
   712                           ;MCAL/Interrupt/INT_MANAGER.c: 119:     if((1 == INTCONbits.RBIE) && (1 == INTCONbits.RB
      +                          IF) && (PORTBbits.RB7 == GPIO_HIGH) && (1 == RB7_Flag)) {
   713   000202  A6F2               	btfss	242,3,c	;volatile
   714   000204  EF06  F001         	goto	i2u165_41
   715   000208  EF08  F001         	goto	i2u165_40
   716   00020C                     i2u165_41:
   717   00020C  EF23  F001         	goto	i2l684
   718   000210                     i2u165_40:
   719   000210  A0F2               	btfss	242,0,c	;volatile
   720   000212  EF0D  F001         	goto	i2u166_41
   721   000216  EF0F  F001         	goto	i2u166_40
   722   00021A                     i2u166_41:
   723   00021A  EF23  F001         	goto	i2l684
   724   00021E                     i2u166_40:
   725   00021E  AE81               	btfss	129,7,c	;volatile
   726   000220  EF14  F001         	goto	i2u167_41
   727   000224  EF16  F001         	goto	i2u167_40
   728   000228                     i2u167_41:
   729   000228  EF23  F001         	goto	i2l684
   730   00022C                     i2u167_40:
   731   00022C  042F               	decf	_RB7_Flag^0,w,c	;volatile
   732   00022E  A4D8               	btfss	status,2,c
   733   000230  EF1C  F001         	goto	i2u168_41
   734   000234  EF1E  F001         	goto	i2u168_40
   735   000238                     i2u168_41:
   736   000238  EF23  F001         	goto	i2l684
   737   00023C                     i2u168_40:
   738   00023C                     
   739                           ;MCAL/Interrupt/INT_MANAGER.c: 120:         RB7_Flag = 0;
   740   00023C  0E00               	movlw	0
   741   00023E  6E2F               	movwf	_RB7_Flag^0,c	;volatile
   742   000240                     
   743                           ;MCAL/Interrupt/INT_MANAGER.c: 121:         RB7_ISR(0);
   744   000240  0E00               	movlw	0
   745   000242  EC37  F008         	call	_RB7_ISR
   746   000246                     i2l684:
   747                           
   748                           ;MCAL/Interrupt/INT_MANAGER.c: 125:     if((1 == INTCONbits.RBIE) && (1 == INTCONbits.RB
      +                          IF) && (PORTBbits.RB7 == GPIO_LOW) && (0 == RB7_Flag)) {
   749   000246  A6F2               	btfss	242,3,c	;volatile
   750   000248  EF28  F001         	goto	i2u169_41
   751   00024C  EF2A  F001         	goto	i2u169_40
   752   000250                     i2u169_41:
   753   000250  EF45  F001         	goto	i2l687
   754   000254                     i2u169_40:
   755   000254  A0F2               	btfss	242,0,c	;volatile
   756   000256  EF2F  F001         	goto	i2u170_41
   757   00025A  EF31  F001         	goto	i2u170_40
   758   00025E                     i2u170_41:
   759   00025E  EF45  F001         	goto	i2l687
   760   000262                     i2u170_40:
   761   000262  BE81               	btfsc	129,7,c	;volatile
   762   000264  EF36  F001         	goto	i2u171_41
   763   000268  EF38  F001         	goto	i2u171_40
   764   00026C                     i2u171_41:
   765   00026C  EF45  F001         	goto	i2l687
   766   000270                     i2u171_40:
   767   000270  502F               	movf	_RB7_Flag^0,w,c	;volatile
   768   000272  A4D8               	btfss	status,2,c
   769   000274  EF3E  F001         	goto	i2u172_41
   770   000278  EF40  F001         	goto	i2u172_40
   771   00027C                     i2u172_41:
   772   00027C  EF45  F001         	goto	i2l687
   773   000280                     i2u172_40:
   774   000280                     
   775                           ;MCAL/Interrupt/INT_MANAGER.c: 126:         RB7_Flag = 1;
   776   000280  0E01               	movlw	1
   777   000282  6E2F               	movwf	_RB7_Flag^0,c	;volatile
   778   000284                     
   779                           ;MCAL/Interrupt/INT_MANAGER.c: 127:         RB7_ISR(1);
   780   000284  0E01               	movlw	1
   781   000286  EC37  F008         	call	_RB7_ISR
   782   00028A                     i2l687:
   783   00028A  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   784   00028C  0011               	retfie		f
   785   00028E                     __end_of_InterruptManager:
   786                           	callstack 0
   787                           
   788 ;; *************** function _RB7_ISR *****************
   789 ;; Defined at:
   790 ;;		line 166 in file "MCAL/Interrupt/INT_EXTERNAL.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  RB7_Source      1    wreg     unsigned char 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  RB7_Source      1    0[COMRAM] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;Total ram usage:        1 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_InterruptManager
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text3
   818   00106E                     __ptext3:
   819                           	callstack 0
   820   00106E                     _RB7_ISR:
   821                           	callstack 28
   822                           
   823                           ;incstack = 0
   824                           ;RB7_ISR@RB7_Source stored from wreg
   825   00106E  6E52               	movwf	RB7_ISR@RB7_Source^0,c
   826   001070                     
   827                           ;MCAL/Interrupt/INT_EXTERNAL.c: 168:     (INTCONbits.RBIF = 0);
   828   001070  90F2               	bcf	242,0,c	;volatile
   829   001072                     
   830                           ;MCAL/Interrupt/INT_EXTERNAL.c: 171:     if (0 == RB7_Source){
   831   001072  5052               	movf	RB7_ISR@RB7_Source^0,w,c
   832   001074  A4D8               	btfss	status,2,c
   833   001076  EF3F  F008         	goto	i2u25_41
   834   00107A  EF41  F008         	goto	i2u25_40
   835   00107E                     i2u25_41:
   836   00107E  EF43  F008         	goto	i2l1526
   837   001082                     i2u25_40:
   838   001082  EF43  F008         	goto	i2l493
   839   001086                     i2l1526:
   840   001086                     i2l493:
   841   001086  0012               	return		;funcret
   842   001088                     __end_of_RB7_ISR:
   843                           	callstack 0
   844                           
   845 ;; *************** function _RB6_ISR *****************
   846 ;; Defined at:
   847 ;;		line 146 in file "MCAL/Interrupt/INT_EXTERNAL.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  RB6_Source      1    wreg     unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  RB6_Source      1    0[COMRAM] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;Total ram usage:        1 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_InterruptManager
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text4
   875   001088                     __ptext4:
   876                           	callstack 0
   877   001088                     _RB6_ISR:
   878                           	callstack 28
   879                           
   880                           ;incstack = 0
   881                           ;RB6_ISR@RB6_Source stored from wreg
   882   001088  6E52               	movwf	RB6_ISR@RB6_Source^0,c
   883   00108A                     
   884                           ;MCAL/Interrupt/INT_EXTERNAL.c: 148:     (INTCONbits.RBIF = 0);
   885   00108A  90F2               	bcf	242,0,c	;volatile
   886   00108C                     
   887                           ;MCAL/Interrupt/INT_EXTERNAL.c: 151:     if (0 == RB6_Source){
   888   00108C  5052               	movf	RB6_ISR@RB6_Source^0,w,c
   889   00108E  A4D8               	btfss	status,2,c
   890   001090  EF4C  F008         	goto	i2u24_41
   891   001094  EF4E  F008         	goto	i2u24_40
   892   001098                     i2u24_41:
   893   001098  EF50  F008         	goto	i2l1516
   894   00109C                     i2u24_40:
   895   00109C  EF50  F008         	goto	i2l484
   896   0010A0                     i2l1516:
   897   0010A0                     i2l484:
   898   0010A0  0012               	return		;funcret
   899   0010A2                     __end_of_RB6_ISR:
   900                           	callstack 0
   901                           
   902 ;; *************** function _RB5_ISR *****************
   903 ;; Defined at:
   904 ;;		line 125 in file "MCAL/Interrupt/INT_EXTERNAL.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  RB5_Source      1    wreg     unsigned char 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  RB5_Source      1    0[COMRAM] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;Total ram usage:        1 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_InterruptManager
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text5
   932   0010A2                     __ptext5:
   933                           	callstack 0
   934   0010A2                     _RB5_ISR:
   935                           	callstack 28
   936                           
   937                           ;incstack = 0
   938                           ;RB5_ISR@RB5_Source stored from wreg
   939   0010A2  6E52               	movwf	RB5_ISR@RB5_Source^0,c
   940   0010A4                     
   941                           ;MCAL/Interrupt/INT_EXTERNAL.c: 127:     (INTCONbits.RBIF = 0);
   942   0010A4  90F2               	bcf	242,0,c	;volatile
   943   0010A6                     
   944                           ;MCAL/Interrupt/INT_EXTERNAL.c: 130:     if (0 == RB5_Source){
   945   0010A6  5052               	movf	RB5_ISR@RB5_Source^0,w,c
   946   0010A8  A4D8               	btfss	status,2,c
   947   0010AA  EF59  F008         	goto	i2u23_41
   948   0010AE  EF5B  F008         	goto	i2u23_40
   949   0010B2                     i2u23_41:
   950   0010B2  EF5D  F008         	goto	i2l1506
   951   0010B6                     i2u23_40:
   952   0010B6  EF5D  F008         	goto	i2l475
   953   0010BA                     i2l1506:
   954   0010BA                     i2l475:
   955   0010BA  0012               	return		;funcret
   956   0010BC                     __end_of_RB5_ISR:
   957                           	callstack 0
   958                           
   959 ;; *************** function _RB4_ISR *****************
   960 ;; Defined at:
   961 ;;		line 104 in file "MCAL/Interrupt/INT_EXTERNAL.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  RB4_Source      1    wreg     unsigned char 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  RB4_Source      1    0[COMRAM] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;Total ram usage:        1 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_InterruptManager
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text6
   989   0010BC                     __ptext6:
   990                           	callstack 0
   991   0010BC                     _RB4_ISR:
   992                           	callstack 28
   993                           
   994                           ;incstack = 0
   995                           ;RB4_ISR@RB4_Source stored from wreg
   996   0010BC  6E52               	movwf	RB4_ISR@RB4_Source^0,c
   997   0010BE                     
   998                           ;MCAL/Interrupt/INT_EXTERNAL.c: 106:     (INTCONbits.RBIF = 0);
   999   0010BE  90F2               	bcf	242,0,c	;volatile
  1000   0010C0                     
  1001                           ;MCAL/Interrupt/INT_EXTERNAL.c: 109:     if (0 == RB4_Source){
  1002   0010C0  5052               	movf	RB4_ISR@RB4_Source^0,w,c
  1003   0010C2  A4D8               	btfss	status,2,c
  1004   0010C4  EF66  F008         	goto	i2u22_41
  1005   0010C8  EF68  F008         	goto	i2u22_40
  1006   0010CC                     i2u22_41:
  1007   0010CC  EF6A  F008         	goto	i2l1496
  1008   0010D0                     i2u22_40:
  1009   0010D0  EF6A  F008         	goto	i2l466
  1010   0010D4                     i2l1496:
  1011   0010D4                     i2l466:
  1012   0010D4  0012               	return		;funcret
  1013   0010D6                     __end_of_RB4_ISR:
  1014                           	callstack 0
  1015                           
  1016 ;; *************** function _INT2_ISR *****************
  1017 ;; Defined at:
  1018 ;;		line 92 in file "MCAL/Interrupt/INT_EXTERNAL.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		None
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_InterruptManager
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text7
  1046   0010E2                     __ptext7:
  1047                           	callstack 0
  1048   0010E2                     _INT2_ISR:
  1049                           	callstack 28
  1050   0010E2                     
  1051                           ;MCAL/Interrupt/INT_EXTERNAL.c: 94:     (INTCON3bits.INT2IF = 0);
  1052   0010E2  92F0               	bcf	240,1,c	;volatile
  1053   0010E4  0012               	return		;funcret
  1054   0010E6                     __end_of_INT2_ISR:
  1055                           	callstack 0
  1056                           
  1057 ;; *************** function _INT1_ISR *****************
  1058 ;; Defined at:
  1059 ;;		line 80 in file "MCAL/Interrupt/INT_EXTERNAL.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;		None
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		None
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;Total ram usage:        0 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; This function calls:
  1080 ;;		Nothing
  1081 ;; This function is called by:
  1082 ;;		_InterruptManager
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text8
  1087   0010E6                     __ptext8:
  1088                           	callstack 0
  1089   0010E6                     _INT1_ISR:
  1090                           	callstack 28
  1091   0010E6                     
  1092                           ;MCAL/Interrupt/INT_EXTERNAL.c: 82:     (INTCON3bits.INT1IF = 0);
  1093   0010E6  90F0               	bcf	240,0,c	;volatile
  1094   0010E8  0012               	return		;funcret
  1095   0010EA                     __end_of_INT1_ISR:
  1096                           	callstack 0
  1097                           
  1098 ;; *************** function _INT0_ISR *****************
  1099 ;; Defined at:
  1100 ;;		line 68 in file "MCAL/Interrupt/INT_EXTERNAL.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		None
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_InterruptManager
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text9
  1128   0010EA                     __ptext9:
  1129                           	callstack 0
  1130   0010EA                     _INT0_ISR:
  1131                           	callstack 28
  1132   0010EA                     
  1133                           ;MCAL/Interrupt/INT_EXTERNAL.c: 70:     (INTCONbits.INT0IF = 0);
  1134   0010EA  92F2               	bcf	242,1,c	;volatile
  1135   0010EC  0012               	return		;funcret
  1136   0010EE                     __end_of_INT0_ISR:
  1137                           	callstack 0
  1138                           
  1139                           	psect	smallconst
  1140   001000                     __psmallconst:
  1141                           	callstack 0
  1142   001000  00                 	db	0
  1143   001001  00                 	db	0	; dummy byte at the end
  1144   000000                     
  1145                           	psect	rparam
  1146   000000                     
  1147                           	psect	temp
  1148   000053                     btemp:
  1149                           	callstack 0
  1150   000053                     	ds	1
  1151   000000                     int$flags	set	btemp
  1152   000000                     wtemp8	set	btemp+1
  1153   000000                     ttemp5	set	btemp+1
  1154   000000                     ttemp6	set	btemp+4
  1155   000000                     ttemp7	set	btemp+8
  1156                           
  1157                           	psect	config
  1158                           
  1159                           ; Padding undefined space
  1160   300000                     	org	3145728
  1161   300000  FF                 	db	255
  1162                           
  1163                           ;Config register CONFIG1H @ 0x300001
  1164                           ;	Oscillator Selection bits
  1165                           ;	FOSC = HS, HS oscillator
  1166                           ;	Fail-Safe Clock Monitor Enable bit
  1167                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1168                           ;	Internal/External Oscillator Switchover bit
  1169                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1170   300001                     	org	3145729
  1171   300001  02                 	db	2
  1172                           
  1173                           ;Config register CONFIG2L @ 0x300002
  1174                           ;	Power-up Timer Enable bit
  1175                           ;	PWRTEN = OFF, PWRT disabled
  1176                           ;	Brown-out Reset Enable bits
  1177                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1178                           ;	Brown Out Reset Voltage bits
  1179                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1180   300002                     	org	3145730
  1181   300002  19                 	db	25
  1182                           
  1183                           ;Config register CONFIG2H @ 0x300003
  1184                           ;	Watchdog Timer Enable bit
  1185                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1186                           ;	Watchdog Timer Postscale Select bits
  1187                           ;	WDTPS = 32768, 1:32768
  1188   300003                     	org	3145731
  1189   300003  1E                 	db	30
  1190                           
  1191                           ; Padding undefined space
  1192   300004                     	org	3145732
  1193   300004  FF                 	db	255
  1194                           
  1195                           ;Config register CONFIG3H @ 0x300005
  1196                           ;	CCP2 MUX bit
  1197                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1198                           ;	PORTB A/D Enable bit
  1199                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1200                           ;	Low-Power Timer1 Oscillator Enable bit
  1201                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1202                           ;	HFINTOSC Fast Start-up
  1203                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1204                           ;	MCLR Pin Enable bit
  1205                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1206   300005                     	org	3145733
  1207   300005  89                 	db	137
  1208                           
  1209                           ;Config register CONFIG4L @ 0x300006
  1210                           ;	Stack Full/Underflow Reset Enable bit
  1211                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1212                           ;	Single-Supply ICSP Enable bit
  1213                           ;	LVP = OFF, Single-Supply ICSP disabled
  1214                           ;	Extended Instruction Set Enable bit
  1215                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1216                           ;	Background Debugger Enable bit
  1217                           ;	DEBUG = 0x1, unprogrammed default
  1218   300006                     	org	3145734
  1219   300006  81                 	db	129
  1220                           
  1221                           ; Padding undefined space
  1222   300007                     	org	3145735
  1223   300007  FF                 	db	255
  1224                           
  1225                           ;Config register CONFIG5L @ 0x300008
  1226                           ;	Code Protection Block 0
  1227                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1228                           ;	Code Protection Block 1
  1229                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1230                           ;	Code Protection Block 2
  1231                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1232                           ;	Code Protection Block 3
  1233                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1234   300008                     	org	3145736
  1235   300008  0F                 	db	15
  1236                           
  1237                           ;Config register CONFIG5H @ 0x300009
  1238                           ;	Boot Block Code Protection bit
  1239                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1240                           ;	Data EEPROM Code Protection bit
  1241                           ;	CPD = OFF, Data EEPROM not code-protected
  1242   300009                     	org	3145737
  1243   300009  C0                 	db	192
  1244                           
  1245                           ;Config register CONFIG6L @ 0x30000A
  1246                           ;	Write Protection Block 0
  1247                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1248                           ;	Write Protection Block 1
  1249                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1250                           ;	Write Protection Block 2
  1251                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1252                           ;	Write Protection Block 3
  1253                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1254   30000A                     	org	3145738
  1255   30000A  0F                 	db	15
  1256                           
  1257                           ;Config register CONFIG6H @ 0x30000B
  1258                           ;	Configuration Register Write Protection bit
  1259                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1260                           ;	Boot Block Write Protection bit
  1261                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1262                           ;	Data EEPROM Write Protection bit
  1263                           ;	WRTD = OFF, Data EEPROM not write-protected
  1264   30000B                     	org	3145739
  1265   30000B  E0                 	db	224
  1266                           
  1267                           ;Config register CONFIG7L @ 0x30000C
  1268                           ;	Table Read Protection Block 0
  1269                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1270                           ;	Table Read Protection Block 1
  1271                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1272                           ;	Table Read Protection Block 2
  1273                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1274                           ;	Table Read Protection Block 3
  1275                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1276   30000C                     	org	3145740
  1277   30000C  0F                 	db	15
  1278                           
  1279                           ;Config register CONFIG7H @ 0x30000D
  1280                           ;	Boot Block Table Read Protection bit
  1281                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1282   30000D                     	org	3145741
  1283   30000D  40                 	db	64
  1284                           tosu	equ	0xFFF
  1285                           tosh	equ	0xFFE
  1286                           tosl	equ	0xFFD
  1287                           stkptr	equ	0xFFC
  1288                           pclatu	equ	0xFFB
  1289                           pclath	equ	0xFFA
  1290                           pcl	equ	0xFF9
  1291                           tblptru	equ	0xFF8
  1292                           tblptrh	equ	0xFF7
  1293                           tblptrl	equ	0xFF6
  1294                           tablat	equ	0xFF5
  1295                           prodh	equ	0xFF4
  1296                           prodl	equ	0xFF3
  1297                           indf0	equ	0xFEF
  1298                           postinc0	equ	0xFEE
  1299                           postdec0	equ	0xFED
  1300                           preinc0	equ	0xFEC
  1301                           plusw0	equ	0xFEB
  1302                           fsr0h	equ	0xFEA
  1303                           fsr0l	equ	0xFE9
  1304                           wreg	equ	0xFE8
  1305                           indf1	equ	0xFE7
  1306                           postinc1	equ	0xFE6
  1307                           postdec1	equ	0xFE5
  1308                           preinc1	equ	0xFE4
  1309                           plusw1	equ	0xFE3
  1310                           fsr1h	equ	0xFE2
  1311                           fsr1l	equ	0xFE1
  1312                           bsr	equ	0xFE0
  1313                           indf2	equ	0xFDF
  1314                           postinc2	equ	0xFDE
  1315                           postdec2	equ	0xFDD
  1316                           preinc2	equ	0xFDC
  1317                           plusw2	equ	0xFDB
  1318                           fsr2h	equ	0xFDA
  1319                           fsr2l	equ	0xFD9
  1320                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        50
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      1      82
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_ConversionGetResult@adc$adc_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_INIT@_adc$adc_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    config_voltage_ref@_adc$adc_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_DIS@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_EDGE_INIT@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_EN@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_FLAG_INIT@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_PIN_INIT@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_PRIORITY_INIT@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_Init@int_obj$INT_EXT_HANDLER_HIGH	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_Init@int_obj$INT_EXT_HANDLER_LOW	PTR FTN()void  size(2) Largest target is 0

    INTx_SetInterruptHandler@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 4095
		 -> LATA(BITBIGSFRllllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), RAM(DATA[4095]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRllllll[1]), PORTB(BITBIGSFRlllllh[1]), PORTC(BITBIGSFRlllllh[1]), PORTD(BITBIGSFRlllllh[1]), 
		 -> PORTE(BITBIGSFRlllllh[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1031$INT_EXT_HANDLER_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1031$INT_EXT_HANDLER_LOW	PTR FTN()void  size(2) Largest target is 0

    S378$adc_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S910$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc$adc_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              __Init
 ---------------------------------------------------------------------------------
 (1) __Init                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _InterruptManager                                     0     0      0     120
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (3) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   __Init

 _InterruptManager (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      32        0.0%
BANK13             100      0       0      30        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      1      52       1       87.2%
BITBIGSFRllllll     20      0       0      45        0.0%
BITBIGSFRhhllh      1F      0       0      38        0.0%
BITBIGSFRllhh       15      0       0      40        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhhlll       B      0       0      39        0.0%
BITBIGSFRlllhh       7      0       0      42        0.0%
BITBIGSFRllhll       7      0       0      41        0.0%
BITBIGSFRlllllh      4      0       0      44        0.0%
BITBIGSFRllllh       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52      31        0.0%
DATA                 0      0      52       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 15 17:37:08 2024

       ??_InterruptManager 0053                        l700 10EE                        l694 10DA  
                      l695 10DA  _RB5_InterruptHandler_HIGH 003D                        wreg 0FE8  
          __end_of_RB4_ISR 10D6            __end_of_RB5_ISR 10BC            __end_of_RB6_ISR 10A2  
          __end_of_RB7_ISR 1088                       l2606 10D6                       _LATA 0F89  
                     _LATB 0F8A                       _LATC 0F8B                       _LATD 0F8C  
                     _LATE 0F8D   _RB4_InterruptHandler_LOW 003F                       _main 10D6  
 _RB7_InterruptHandler_LOW 0033                       fsr1l 0FE1                       btemp 0053  
                     start 028E               ___param_bank 0000           __end_of_INT0_ISR 10EE  
         __end_of_INT1_ISR 10EA           __end_of_INT2_ISR 10E6                      ?_main 0052  
                    _EEADR 0FA9                      i2l453 10E8                      i2l449 10EC  
                    i2l457 10E4                      i2l466 10D4                      i2l475 10BA  
                    i2l484 10A0                      i2l493 1086                      i2l670 006A  
                    i2l680 01BE                      i2l672 00AE                      i2l682 0202  
                    i2l674 00F2                      i2l666 002A                      i2l684 0246  
                    i2l676 0136                      i2l668 004A                      i2l678 017A  
                    i2l687 028A                      _PORTA 0F80                      _PORTB 0F81  
                    _PORTC 0F82                      _PORTD 0F83                      _PORTE 0F84  
                    _TRISA 0F92                      _TRISB 0F93                      _TRISC 0F94  
                    _TRISD 0F95                      _TRISE 0F96                      __Init 10EE  
                    tablat 0FF5                      ttemp5 0054                      ttemp6 0057  
                    ttemp7 005B                      status 0FD8                      wtemp8 0054  
          __initialization 1002               __end_of_main 10E2                     ??_main 0053  
            __activetblptr 0002                  ??_RB4_ISR 0052                  ??_RB5_ISR 0052  
                ??_RB6_ISR 0052                  ??_RB7_ISR 0052                     ?__Init 0052  
                   _ADRESH 0FC4                     _EEADRH 0FAA                     _ADRESL 0FC3  
                   _EEDATA 0FA8                     _EECON2 0FA7                     i2l1500 10A4  
                   i2l1502 10A6                     i2l1510 108A                     i2l1512 108C  
                   i2l1520 1070                     i2l1506 10BA                     i2l1522 1072  
                   i2l1516 10A0                     i2l1526 1086                     i2l2600 0270  
                   i2l2520 0046                     i2l2512 000A                     i2l1482 10E6  
                   i2l1490 10BE                     i2l2602 0280                     i2l2530 0094  
                   i2l2522 0058                     i2l2514 0018                     i2l1492 10C0  
                   i2l2604 0284                     i2l2540 00D8                     i2l2532 00A4  
                   i2l2524 0066                     i2l2516 0026                     i2l1478 10EA  
                   i2l1486 10E2                     i2l2550 011C                     i2l2542 00E8  
                   i2l2534 00A8                     i2l2526 0078                     i2l2518 0038  
                   i2l1496 10D4                     i2l2560 0160                     i2l2552 012C  
                   i2l2544 00EC                     i2l2536 00BC                     i2l2528 0086  
                   i2l2570 01A4                     i2l2562 0170                     i2l2554 0130  
                   i2l2546 0100                     i2l2538 00CA                     i2l2580 01E8  
                   i2l2572 01B4                     i2l2564 0174                     i2l2556 0144  
                   i2l2548 010E                     i2l2590 022C                     i2l2582 01F8  
                   i2l2574 01B8                     i2l2566 0188                     i2l2558 0152  
                   i2l2592 023C                     i2l2584 01FC                     i2l2576 01CC  
                   i2l2568 0196                     i2l2594 0240                     i2l2586 0210  
                   i2l2578 01DA                     i2l2596 0254                     i2l2588 021E  
                   i2l2598 0262                     clear_0 1028                     isa$std 0001  
             __pdataCOMRAM 0001               __mediumconst 0000          ECU_LED_Init@F3310 0051  
                   tblptrh 0FF7                     tblptrl 0FF6                     tblptru 0FF8  
               __accesstop 0060    __end_of__initialization 102E                  ?_INT0_ISR 0052  
                ?_INT1_ISR 0052                  ?_INT2_ISR 0052              ___rparam_used 0001  
        RB5_ISR@RB5_Source 0052             __pcstackCOMRAM 0052              __end_of__Init 10F0  
                  ??__Init 0053      _INT0_InterruptHandler 0047                 ??_INT0_ISR 0052  
               ??_INT1_ISR 0052                 ??_INT2_ISR 0052        ECU_LED_TOGGLE@F3325 004E  
        RB7_ISR@RB7_Source 0052                    _RB4_ISR 10BC                    _RB5_ISR 10A2  
                  _RB6_ISR 1088                    _RB7_ISR 106E                    _LAT_REG 001B  
_RB6_InterruptHandler_HIGH 0039        ECU_RELAY_Init@F3304 004D                    i2u22_40 10D0  
                  i2u22_41 10CC                    i2u23_40 10B6                    i2u23_41 10B2  
                  i2u24_40 109C                    i2u24_41 1098                    i2u25_40 1082  
                  i2u25_41 107E   _RB6_InterruptHandler_LOW 0037       _ADC_InterruptHandler 0049  
                  __Hparam 0000                    __Lparam 0000               __psmallconst 1000  
                  __pcinit 1002                    __ramtop 1000                    __ptext0 10D6  
                  __ptext1 10EE                    __ptext3 106E                    __ptext4 1088  
                  __ptext5 10A2                    __ptext6 10BC                    __ptext7 10E2  
                  __ptext8 10E6                    __ptext9 10EA       end_of_initialization 102E  
            __Lmediumconst 0000                    postdec1 0FE5                    postinc0 0FEE  
    _INT1_InterruptHandler 0045                  _PORTBbits 0F81           _InterruptManager 0008  
          ECU_LED_ON@F3315 0050              __pidataCOMRAM 103C         ECU_RELAY_OFF@F3314 004B  
      start_initialization 1002         ECU_RELAY_ONN@F3309 004C                   ?_RB4_ISR 0052  
                 ?_RB5_ISR 0052                   ?_RB6_ISR 0052                   ?_RB7_ISR 0052  
              __pbssCOMRAM 0033      _INT2_InterruptHandler 0043                  __pintcode 0008  
              __smallconst 1000  _RB4_InterruptHandler_HIGH 0041  _RB7_InterruptHandler_HIGH 0035  
 _RB5_InterruptHandler_LOW 003B                   _INT0_ISR 10EA                   _INT1_ISR 10E6  
                 _INT2_ISR 10E2                   _RB4_Flag 0032                   _RB5_Flag 0031  
                 _RB6_Flag 0030                   _RB7_Flag 002F          RB4_ISR@RB4_Source 0052  
 __end_of_InterruptManager 028E                   i2u140_40 0066                   i2u140_41 0062  
                 i2u141_40 0078                   i2u141_41 0074                   i2u150_40 010E  
                 i2u142_40 0086                   i2u150_41 010A                   i2u142_41 0082  
                 i2u151_40 011C                   i2u143_40 0094                   i2u135_40 0018  
                 i2u151_41 0118                   i2u143_41 0090                   i2u135_41 0014  
                 i2u160_40 01B4                   i2u152_40 012C                   i2u144_40 00A4  
                 i2u136_40 0026                   i2u160_41 01B0                   i2u152_41 0128  
                 i2u144_41 00A0                   i2u136_41 0022                   i2u161_40 01CC  
                 i2u153_40 0144                   i2u145_40 00BC                   i2u137_40 0038  
                 i2u161_41 01C8                   i2u153_41 0140                   i2u145_41 00B8  
                 i2u137_41 0034                   i2u170_40 0262                   i2u162_40 01DA  
                 i2u154_40 0152                   i2u146_40 00CA                   i2u138_40 0046  
                 i2u170_41 025E                   i2u162_41 01D6                   i2u154_41 014E  
                 i2u146_41 00C6                   i2u138_41 0042                   i2u171_40 0270  
                 i2u163_40 01E8                   i2u155_40 0160                   i2u147_40 00D8  
                 i2u139_40 0058                   i2u171_41 026C                   i2u163_41 01E4  
                 i2u155_41 015C                   i2u147_41 00D4                   i2u139_41 0054  
                 i2u172_40 0280                   i2u164_40 01F8                   i2u156_40 0170  
                 i2u148_40 00E8                   i2u172_41 027C                   i2u164_41 01F4  
                 i2u156_41 016C                   i2u148_41 00E4                   i2u165_40 0210  
                 i2u157_40 0188                   i2u149_40 0100                   i2u165_41 020C  
                 i2u157_41 0184                   i2u149_41 00FC                   i2u166_40 021E  
                 i2u158_40 0196                   i2u166_41 021A                   i2u158_41 0192  
                 i2u167_40 022C                   i2u159_40 01A4                   i2u167_41 0228  
                 i2u159_41 01A0                   i2u168_40 023C                   i2u168_41 0238  
                 i2u169_40 0254                   i2u169_41 0250                   _PIR1bits 0F9E  
                 _RCONbits 0FD0          _keypad_btn_values 0001                   _PORT_REG 0011  
                 _TRIS_REG 0025                 _ADCON0bits 0FC2                 _ADCON1bits 0FC1  
               _ADCON2bits 0FC0                _INTCON2bits 0FF1                _INTCON3bits 0FF0  
                copy_data0 1016                 _EECON1bits 0FA6                   __Hrparam 0000  
                 __Lrparam 0000          RB6_ISR@RB6_Source 0052                   isa$xinst 0000  
                 int$flags 0053                 _INTCONbits 0FF2                   intlevel2 0000  
         ECU_LED_OFF@F3320 004F          ?_InterruptManager 0052  
