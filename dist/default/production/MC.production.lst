

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 17 21:54:19 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 21/07/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F46K20 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   001080                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _keypad_btn_values
    64   001080  37                 	db	55
    65   001081  38                 	db	56
    66   001082  39                 	db	57
    67   001083  2F                 	db	47
    68   001084  34                 	db	52
    69   001085  35                 	db	53
    70   001086  36                 	db	54
    71   001087  2A                 	db	42
    72   001088  31                 	db	49
    73   001089  32                 	db	50
    74   00108A  33                 	db	51
    75   00108B  2D                 	db	45
    76   00108C  23                 	db	35
    77   00108D  30                 	db	48
    78   00108E  3D                 	db	61
    79   00108F  2B                 	db	43
    80                           
    81                           ;initializer for _PORT_REG
    82   001090  80                 	db	128
    83   001091  0F                 	db	15
    84   001092  81                 	db	129
    85   001093  0F                 	db	15
    86   001094  82                 	db	130
    87   001095  0F                 	db	15
    88   001096  83                 	db	131
    89   001097  0F                 	db	15
    90   001098  84                 	db	132
    91   001099  0F                 	db	15
    92                           
    93                           ;initializer for _LAT_REG
    94   00109A  89                 	db	137
    95   00109B  0F                 	db	15
    96   00109C  8A                 	db	138
    97   00109D  0F                 	db	15
    98   00109E  8B                 	db	139
    99   00109F  0F                 	db	15
   100   0010A0  8C                 	db	140
   101   0010A1  0F                 	db	15
   102   0010A2  8D                 	db	141
   103   0010A3  0F                 	db	15
   104                           
   105                           ;initializer for _TRIS_REG
   106   0010A4  92                 	db	146
   107   0010A5  0F                 	db	15
   108   0010A6  93                 	db	147
   109   0010A7  0F                 	db	15
   110   0010A8  94                 	db	148
   111   0010A9  0F                 	db	15
   112   0010AA  95                 	db	149
   113   0010AB  0F                 	db	15
   114   0010AC  96                 	db	150
   115   0010AD  0F                 	db	15
   116                           
   117                           ;initializer for _RB7_Flag
   118   0010AE  01                 	db	1
   119                           
   120                           ;initializer for _RB6_Flag
   121   0010AF  01                 	db	1
   122                           
   123                           ;initializer for _RB5_Flag
   124   0010B0  01                 	db	1
   125                           
   126                           ;initializer for _RB4_Flag
   127   0010B1  01                 	db	1
   128   000000                     _INTCON2bits	set	4081
   129   000000                     _EECON2	set	4007
   130   000000                     _EECON1bits	set	4006
   131   000000                     _EEDATA	set	4008
   132   000000                     _EEADR	set	4009
   133   000000                     _EEADRH	set	4010
   134   000000                     _INTCONbits	set	4082
   135   000000                     _PORTA	set	3968
   136   000000                     _LATA	set	3977
   137   000000                     _TRISA	set	3986
   138   000000                     _INTCON3bits	set	4080
   139   000000                     _TRISE	set	3990
   140   000000                     _TRISD	set	3989
   141   000000                     _TRISC	set	3988
   142   000000                     _TRISB	set	3987
   143   000000                     _LATE	set	3981
   144   000000                     _LATD	set	3980
   145   000000                     _LATC	set	3979
   146   000000                     _LATB	set	3978
   147   000000                     _PORTE	set	3972
   148   000000                     _PORTD	set	3971
   149   000000                     _PORTC	set	3970
   150   000000                     _PORTB	set	3969
   151                           
   152                           ; #config settings
   153                           
   154                           	psect	cinit
   155   001046                     __pcinit:
   156                           	callstack 0
   157   001046                     start_initialization:
   158                           	callstack 0
   159   001046                     __initialization:
   160                           	callstack 0
   161                           
   162                           ; Initialize objects allocated to COMRAM (50 bytes)
   163                           ; load TBLPTR registers with __pidataCOMRAM
   164   001046  0E80               	movlw	low __pidataCOMRAM
   165   001048  6EF6               	movwf	tblptrl,c
   166   00104A  0E10               	movlw	high __pidataCOMRAM
   167   00104C  6EF7               	movwf	tblptrh,c
   168   00104E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   169   001050  6EF8               	movwf	tblptru,c
   170   001052  EE00  F001         	lfsr	0,__pdataCOMRAM
   171   001056  EE10 F032          	lfsr	1,50
   172   00105A                     copy_data0:
   173   00105A  0009               	tblrd		*+
   174   00105C  CFF5 FFEE          	movff	tablat,postinc0
   175   001060  50E5               	movf	postdec1,w,c
   176   001062  50E1               	movf	fsr1l,w,c
   177   001064  E1FA               	bnz	copy_data0
   178                           
   179                           ; Clear objects allocated to COMRAM (29 bytes)
   180   001066  EE00  F033         	lfsr	0,__pbssCOMRAM
   181   00106A  0E1D               	movlw	29
   182   00106C                     clear_0:
   183   00106C  6AEE               	clrf	postinc0,c
   184   00106E  06E8               	decf	wreg,f,c
   185   001070  E1FD               	bnz	clear_0
   186   001072                     end_of_initialization:
   187                           	callstack 0
   188   001072                     __end_of__initialization:
   189                           	callstack 0
   190   001072  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   191   001074  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   192   001076  0E00               	movlw	low (__Lmediumconst shr (0+16))
   193   001078  6EF8               	movwf	tblptru,c
   194   00107A  0100               	movlb	0
   195   00107C  EF59  F008         	goto	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMRAM
   198   000033                     __pbssCOMRAM:
   199                           	callstack 0
   200   000033                     _RB7_InterruptHandler_LOW:
   201                           	callstack 0
   202   000033                     	ds	2
   203   000035                     _RB7_InterruptHandler_HIGH:
   204                           	callstack 0
   205   000035                     	ds	2
   206   000037                     _RB6_InterruptHandler_LOW:
   207                           	callstack 0
   208   000037                     	ds	2
   209   000039                     _RB6_InterruptHandler_HIGH:
   210                           	callstack 0
   211   000039                     	ds	2
   212   00003B                     _RB5_InterruptHandler_LOW:
   213                           	callstack 0
   214   00003B                     	ds	2
   215   00003D                     _RB5_InterruptHandler_HIGH:
   216                           	callstack 0
   217   00003D                     	ds	2
   218   00003F                     _RB4_InterruptHandler_LOW:
   219                           	callstack 0
   220   00003F                     	ds	2
   221   000041                     _RB4_InterruptHandler_HIGH:
   222                           	callstack 0
   223   000041                     	ds	2
   224   000043                     _INT2_InterruptHandler:
   225                           	callstack 0
   226   000043                     	ds	2
   227   000045                     _INT1_InterruptHandler:
   228                           	callstack 0
   229   000045                     	ds	2
   230   000047                     _INT0_InterruptHandler:
   231                           	callstack 0
   232   000047                     	ds	2
   233   000049                     ECU_RELAY_OFF@F3314:
   234                           	callstack 0
   235   000049                     	ds	1
   236   00004A                     ECU_RELAY_ONN@F3309:
   237                           	callstack 0
   238   00004A                     	ds	1
   239   00004B                     ECU_RELAY_Init@F3304:
   240                           	callstack 0
   241   00004B                     	ds	1
   242   00004C                     ECU_LED_TOGGLE@F3325:
   243                           	callstack 0
   244   00004C                     	ds	1
   245   00004D                     ECU_LED_OFF@F3320:
   246                           	callstack 0
   247   00004D                     	ds	1
   248   00004E                     ECU_LED_ON@F3315:
   249                           	callstack 0
   250   00004E                     	ds	1
   251   00004F                     ECU_LED_Init@F3310:
   252                           	callstack 0
   253   00004F                     	ds	1
   254                           
   255                           	psect	dataCOMRAM
   256   000001                     __pdataCOMRAM:
   257                           	callstack 0
   258   000001                     _keypad_btn_values:
   259                           	callstack 0
   260   000001                     	ds	16
   261   000011                     _PORT_REG:
   262                           	callstack 0
   263   000011                     	ds	10
   264   00001B                     _LAT_REG:
   265                           	callstack 0
   266   00001B                     	ds	10
   267   000025                     _TRIS_REG:
   268                           	callstack 0
   269   000025                     	ds	10
   270   00002F                     _RB7_Flag:
   271                           	callstack 0
   272   00002F                     	ds	1
   273   000030                     _RB6_Flag:
   274                           	callstack 0
   275   000030                     	ds	1
   276   000031                     _RB5_Flag:
   277                           	callstack 0
   278   000031                     	ds	1
   279   000032                     _RB4_Flag:
   280                           	callstack 0
   281   000032                     	ds	1
   282                           
   283                           	psect	cstackCOMRAM
   284   000050                     __pcstackCOMRAM:
   285                           	callstack 0
   286   000050                     ??_InterruptManagerLow:
   287   000050                     
   288                           ; 2 bytes @ 0x0
   289   000050                     	ds	1
   290   000051                     
   291                           ; 1 bytes @ 0x1
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   294 ;;
   295 ;; *************** function _main *****************
   296 ;; Defined at:
   297 ;;		line 11 in file "app.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  2  528[None  ] int 
   304 ;; Registers used:
   305 ;;		cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;Total ram usage:        0 bytes
   316 ;; Hardware stack levels required when called: 5
   317 ;; This function calls:
   318 ;;		__Init
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text0
   325   0010B2                     __ptext0:
   326                           	callstack 0
   327   0010B2                     _main:
   328                           	callstack 26
   329   0010B2                     
   330                           ;app.c: 13:     _Init();
   331   0010B2  EC65  F008         	call	__Init	;wreg free
   332   0010B6                     l529:
   333   0010B6  EF5B  F008         	goto	l529
   334   0010BA  EF23  F000         	goto	start
   335   0010BE                     __end_of_main:
   336                           	callstack 0
   337                           
   338 ;; *************** function __Init *****************
   339 ;; Defined at:
   340 ;;		line 22 in file "app.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		None
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;Total ram usage:        0 bytes
   359 ;; Hardware stack levels used: 1
   360 ;; Hardware stack levels required when called: 4
   361 ;; This function calls:
   362 ;;		Nothing
   363 ;; This function is called by:
   364 ;;		_main
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text1
   369   0010CA                     __ptext1:
   370                           	callstack 0
   371   0010CA                     __Init:
   372                           	callstack 26
   373   0010CA  0012               	return		;funcret
   374   0010CC                     __end_of__Init:
   375                           	callstack 0
   376                           
   377 ;; *************** function _InterruptManagerLow *****************
   378 ;; Defined at:
   379 ;;		line 45 in file "MCAL/Interrupt/INT_MANAGER.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		cstack
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;Total ram usage:        1 bytes
   398 ;; Hardware stack levels used: 1
   399 ;; Hardware stack levels required when called: 3
   400 ;; This function calls:
   401 ;;		_INT2_ISR
   402 ;; This function is called by:
   403 ;;		Interrupt level 1
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           	psect	intcodelo
   408   000018                     __pintcodelo:
   409                           	callstack 0
   410   000018                     _InterruptManagerLow:
   411                           	callstack 26
   412                           
   413                           ;incstack = 0
   414   000018  8051               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   415   00001A  CFE0 F050          	movff	bsr,??_InterruptManagerLow
   416   00001E                     
   417                           ;MCAL/Interrupt/INT_MANAGER.c: 46:     if((1 == INTCON3bits.INT1IE) && (1 == INTCON3bits
      +                          .INT1IF)) {
   418   00001E  A6F0               	btfss	240,3,c	;volatile
   419   000020  EF14  F000         	goto	i1u106_21
   420   000024  EF16  F000         	goto	i1u106_20
   421   000028                     i1u106_21:
   422   000028  EF1F  F000         	goto	i1l522
   423   00002C                     i1u106_20:
   424   00002C  A0F0               	btfss	240,0,c	;volatile
   425   00002E  EF1B  F000         	goto	i1u107_21
   426   000032  EF1D  F000         	goto	i1u107_20
   427   000036                     i1u107_21:
   428   000036  EF1F  F000         	goto	i1l522
   429   00003A                     i1u107_20:
   430   00003A                     
   431                           ;MCAL/Interrupt/INT_MANAGER.c: 47:        INT2_ISR();
   432   00003A  EC5F  F008         	call	_INT2_ISR	;wreg free
   433   00003E                     i1l522:
   434   00003E  C050  FFE0         	movff	??_InterruptManagerLow,bsr
   435   000042  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   436   000044  0010               	retfie	
   437   000046                     __end_of_InterruptManagerLow:
   438                           	callstack 0
   439                           
   440 ;; *************** function _INT2_ISR *****************
   441 ;; Defined at:
   442 ;;		line 92 in file "MCAL/Interrupt/INT_EXTERNAL.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		None
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;Total ram usage:        0 bytes
   461 ;; Hardware stack levels used: 1
   462 ;; Hardware stack levels required when called: 2
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_InterruptManagerLow
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           	psect	text3
   471   0010BE                     __ptext3:
   472                           	callstack 0
   473   0010BE                     _INT2_ISR:
   474                           	callstack 26
   475   0010BE                     
   476                           ;MCAL/Interrupt/INT_EXTERNAL.c: 94:     (INTCON3bits.INT2IF = 0);
   477   0010BE  92F0               	bcf	240,1,c	;volatile
   478   0010C0  0012               	return		;funcret
   479   0010C2                     __end_of_INT2_ISR:
   480                           	callstack 0
   481                           
   482 ;; *************** function _InterruptManagerHigh *****************
   483 ;; Defined at:
   484 ;;		line 26 in file "MCAL/Interrupt/INT_MANAGER.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 1
   505 ;; This function calls:
   506 ;;		_INT0_ISR
   507 ;;		i2_INT2_ISR
   508 ;; This function is called by:
   509 ;;		Interrupt level 2
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	intcode
   514   000008                     __pintcode:
   515                           	callstack 0
   516   000008                     _InterruptManagerHigh:
   517                           	callstack 26
   518                           
   519                           ;incstack = 0
   520   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   521   00000A  EF01  F008         	goto	int_func
   522                           
   523                           	psect	intcode_body
   524   001002                     __pintcode_body:
   525                           	callstack 26
   526   001002                     int_func:
   527                           	callstack 26
   528   001002                     
   529                           ;MCAL/Interrupt/INT_MANAGER.c: 27:     if((1 == INTCONbits.INT0IE) && (1 == INTCONbits.I
      +                          NT0IF)) {
   530   001002  A8F2               	btfss	242,4,c	;volatile
   531   001004  EF06  F008         	goto	i2u102_41
   532   001008  EF08  F008         	goto	i2u102_40
   533   00100C                     i2u102_41:
   534   00100C  EF11  F008         	goto	i2l512
   535   001010                     i2u102_40:
   536   001010  A2F2               	btfss	242,1,c	;volatile
   537   001012  EF0D  F008         	goto	i2u103_41
   538   001016  EF0F  F008         	goto	i2u103_40
   539   00101A                     i2u103_41:
   540   00101A  EF11  F008         	goto	i2l512
   541   00101E                     i2u103_40:
   542   00101E                     
   543                           ;MCAL/Interrupt/INT_MANAGER.c: 28:         INT0_ISR();
   544   00101E  EC63  F008         	call	_INT0_ISR	;wreg free
   545   001022                     i2l512:
   546                           
   547                           ;MCAL/Interrupt/INT_MANAGER.c: 31:     if((1 == INTCON3bits.INT2IE) && (1 == INTCON3bits
      +                          .INT2IF)) {
   548   001022  A8F0               	btfss	240,4,c	;volatile
   549   001024  EF16  F008         	goto	i2u104_41
   550   001028  EF18  F008         	goto	i2u104_40
   551   00102C                     i2u104_41:
   552   00102C  EF21  F008         	goto	i2l515
   553   001030                     i2u104_40:
   554   001030  A2F0               	btfss	240,1,c	;volatile
   555   001032  EF1D  F008         	goto	i2u105_41
   556   001036  EF1F  F008         	goto	i2u105_40
   557   00103A                     i2u105_41:
   558   00103A  EF21  F008         	goto	i2l515
   559   00103E                     i2u105_40:
   560   00103E                     
   561                           ;MCAL/Interrupt/INT_MANAGER.c: 32:        INT2_ISR();
   562   00103E  EC61  F008         	call	i2_INT2_ISR	;wreg free
   563   001042                     i2l515:
   564   001042  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   565   001044  0011               	retfie		f
   566   001046                     __end_of_InterruptManagerHigh:
   567                           	callstack 0
   568                           
   569 ;; *************** function i2_INT2_ISR *****************
   570 ;; Defined at:
   571 ;;		line 92 in file "MCAL/Interrupt/INT_EXTERNAL.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		None
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; This function calls:
   592 ;;		Nothing
   593 ;; This function is called by:
   594 ;;		_InterruptManagerHigh
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text5
   599   0010C2                     __ptext5:
   600                           	callstack 0
   601   0010C2                     i2_INT2_ISR:
   602                           	callstack 26
   603   0010C2                     
   604                           ;MCAL/Interrupt/INT_EXTERNAL.c: 94:     (INTCON3bits.INT2IF = 0);
   605   0010C2  92F0               	bcf	240,1,c	;volatile
   606   0010C4  0012               	return		;funcret
   607   0010C6                     __end_ofi2_INT2_ISR:
   608                           	callstack 0
   609                           
   610 ;; *************** function _INT0_ISR *****************
   611 ;; Defined at:
   612 ;;		line 68 in file "MCAL/Interrupt/INT_EXTERNAL.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		None
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used: 1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_InterruptManagerHigh
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text6
   640   0010C6                     __ptext6:
   641                           	callstack 0
   642   0010C6                     _INT0_ISR:
   643                           	callstack 26
   644   0010C6                     
   645                           ;MCAL/Interrupt/INT_EXTERNAL.c: 70:     (INTCONbits.INT0IF = 0);
   646   0010C6  92F2               	bcf	242,1,c	;volatile
   647   0010C8  0012               	return		;funcret
   648   0010CA                     __end_of_INT0_ISR:
   649                           	callstack 0
   650                           
   651                           	psect	smallconst
   652   001000                     __psmallconst:
   653                           	callstack 0
   654   001000  00                 	db	0
   655   001001  00                 	db	0	; dummy byte at the end
   656   000000                     
   657                           	psect	rparam
   658   000000                     
   659                           	psect	temp
   660   000051                     btemp:
   661                           	callstack 0
   662   000051                     	ds	1
   663   000000                     int$flags	set	btemp
   664   000000                     wtemp8	set	btemp+1
   665   000000                     ttemp5	set	btemp+1
   666   000000                     ttemp6	set	btemp+4
   667   000000                     ttemp7	set	btemp+8
   668                           
   669                           	psect	config
   670                           
   671                           ; Padding undefined space
   672   300000                     	org	3145728
   673   300000  FF                 	db	255
   674                           
   675                           ;Config register CONFIG1H @ 0x300001
   676                           ;	Oscillator Selection bits
   677                           ;	FOSC = HS, HS oscillator
   678                           ;	Fail-Safe Clock Monitor Enable bit
   679                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   680                           ;	Internal/External Oscillator Switchover bit
   681                           ;	IESO = OFF, Oscillator Switchover mode disabled
   682   300001                     	org	3145729
   683   300001  02                 	db	2
   684                           
   685                           ;Config register CONFIG2L @ 0x300002
   686                           ;	Power-up Timer Enable bit
   687                           ;	PWRTEN = OFF, PWRT disabled
   688                           ;	Brown-out Reset Enable bits
   689                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   690                           ;	Brown Out Reset Voltage bits
   691                           ;	BORV = 18, VBOR set to 1.8 V nominal
   692   300002                     	org	3145730
   693   300002  19                 	db	25
   694                           
   695                           ;Config register CONFIG2H @ 0x300003
   696                           ;	Watchdog Timer Enable bit
   697                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   698                           ;	Watchdog Timer Postscale Select bits
   699                           ;	WDTPS = 32768, 1:32768
   700   300003                     	org	3145731
   701   300003  1E                 	db	30
   702                           
   703                           ; Padding undefined space
   704   300004                     	org	3145732
   705   300004  FF                 	db	255
   706                           
   707                           ;Config register CONFIG3H @ 0x300005
   708                           ;	CCP2 MUX bit
   709                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   710                           ;	PORTB A/D Enable bit
   711                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   712                           ;	Low-Power Timer1 Oscillator Enable bit
   713                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   714                           ;	HFINTOSC Fast Start-up
   715                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   716                           ;	MCLR Pin Enable bit
   717                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   718   300005                     	org	3145733
   719   300005  89                 	db	137
   720                           
   721                           ;Config register CONFIG4L @ 0x300006
   722                           ;	Stack Full/Underflow Reset Enable bit
   723                           ;	STVREN = ON, Stack full/underflow will cause Reset
   724                           ;	Single-Supply ICSP Enable bit
   725                           ;	LVP = OFF, Single-Supply ICSP disabled
   726                           ;	Extended Instruction Set Enable bit
   727                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   728                           ;	Background Debugger Enable bit
   729                           ;	DEBUG = 0x1, unprogrammed default
   730   300006                     	org	3145734
   731   300006  81                 	db	129
   732                           
   733                           ; Padding undefined space
   734   300007                     	org	3145735
   735   300007  FF                 	db	255
   736                           
   737                           ;Config register CONFIG5L @ 0x300008
   738                           ;	Code Protection Block 0
   739                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   740                           ;	Code Protection Block 1
   741                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   742                           ;	Code Protection Block 2
   743                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   744                           ;	Code Protection Block 3
   745                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   746   300008                     	org	3145736
   747   300008  0F                 	db	15
   748                           
   749                           ;Config register CONFIG5H @ 0x300009
   750                           ;	Boot Block Code Protection bit
   751                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   752                           ;	Data EEPROM Code Protection bit
   753                           ;	CPD = OFF, Data EEPROM not code-protected
   754   300009                     	org	3145737
   755   300009  C0                 	db	192
   756                           
   757                           ;Config register CONFIG6L @ 0x30000A
   758                           ;	Write Protection Block 0
   759                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   760                           ;	Write Protection Block 1
   761                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   762                           ;	Write Protection Block 2
   763                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   764                           ;	Write Protection Block 3
   765                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
   766   30000A                     	org	3145738
   767   30000A  0F                 	db	15
   768                           
   769                           ;Config register CONFIG6H @ 0x30000B
   770                           ;	Configuration Register Write Protection bit
   771                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   772                           ;	Boot Block Write Protection bit
   773                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   774                           ;	Data EEPROM Write Protection bit
   775                           ;	WRTD = OFF, Data EEPROM not write-protected
   776   30000B                     	org	3145739
   777   30000B  E0                 	db	224
   778                           
   779                           ;Config register CONFIG7L @ 0x30000C
   780                           ;	Table Read Protection Block 0
   781                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   782                           ;	Table Read Protection Block 1
   783                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   784                           ;	Table Read Protection Block 2
   785                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   786                           ;	Table Read Protection Block 3
   787                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   788   30000C                     	org	3145740
   789   30000C  0F                 	db	15
   790                           
   791                           ;Config register CONFIG7H @ 0x30000D
   792                           ;	Boot Block Table Read Protection bit
   793                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   794   30000D                     	org	3145741
   795   30000D  40                 	db	64
   796                           tosu	equ	0xFFF
   797                           tosh	equ	0xFFE
   798                           tosl	equ	0xFFD
   799                           stkptr	equ	0xFFC
   800                           pclatu	equ	0xFFB
   801                           pclath	equ	0xFFA
   802                           pcl	equ	0xFF9
   803                           tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           prodh	equ	0xFF4
   808                           prodl	equ	0xFF3
   809                           indf0	equ	0xFEF
   810                           postinc0	equ	0xFEE
   811                           postdec0	equ	0xFED
   812                           preinc0	equ	0xFEC
   813                           plusw0	equ	0xFEB
   814                           fsr0h	equ	0xFEA
   815                           fsr0l	equ	0xFE9
   816                           wreg	equ	0xFE8
   817                           indf1	equ	0xFE7
   818                           postinc1	equ	0xFE6
   819                           postdec1	equ	0xFE5
   820                           preinc1	equ	0xFE4
   821                           plusw1	equ	0xFE3
   822                           fsr1h	equ	0xFE2
   823                           fsr1l	equ	0xFE1
   824                           bsr	equ	0xFE0
   825                           indf2	equ	0xFDF
   826                           postinc2	equ	0xFDE
   827                           postdec2	equ	0xFDD
   828                           preinc2	equ	0xFDC
   829                           plusw2	equ	0xFDB
   830                           fsr2h	equ	0xFDA
   831                           fsr2l	equ	0xFD9
   832                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        50
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      1      80
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_DIS@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_EDGE_INIT@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_EN@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_FLAG_INIT@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_PIN_INIT@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_Init@int_obj$INT_EXT_HANDLER_HIGH	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_Init@int_obj$INT_EXT_HANDLER_LOW	PTR FTN()void  size(2) Largest target is 0

    INTx_SetInterruptHandler@int_obj$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 4095
		 -> LATA(BITBIGSFRllllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), RAM(DATA[4095]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRllllll[1]), PORTB(BITBIGSFRlllllh[1]), PORTC(BITBIGSFRlllllh[1]), PORTD(BITBIGSFRlllllh[1]), 
		 -> PORTE(BITBIGSFRlllllh[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S589$INT_EXT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S705$INT_EXT_HANDLER_HIGH	PTR FTN()void  size(2) Largest target is 0

    S705$INT_EXT_HANDLER_LOW	PTR FTN()void  size(2) Largest target is 0

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllllll[1]), TRISB(BITBIGSFRlllh[1]), TRISC(BITBIGSFRlllh[1]), TRISD(BITBIGSFRlllh[1]), 
		 -> TRISE(BITBIGSFRlllh[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManagerLow in COMRAM

    None.

Critical Paths under _InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              __Init
 ---------------------------------------------------------------------------------
 (1) __Init                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _InterruptManagerLow                                  1     1      0       0
                                              0 COMRAM     1     1      0
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (3) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManagerHigh                                 0     0      0       0
                           _INT0_ISR
                         i2_INT2_ISR
 ---------------------------------------------------------------------------------
 (5) i2_INT2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   __Init

 _InterruptManagerLow (ROOT)
   _INT2_ISR

 _InterruptManagerHigh (ROOT)
   _INT0_ISR
   i2_INT2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      1      50       1       85.1%
BITBIGSFRlhl        45      0       0      37        0.0%
BITBIGSFRllllll     20      0       0      41        0.0%
BITBIGSFRlllh        F      0       0      38        0.0%
BITBIGSFRh           D      0       0      36        0.0%
BITBIGSFRlllllh      4      0       0      40        0.0%
BITBIGSFRllllh       4      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      42        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 17 21:54:19 2023

                          bsr 0FE0         ??_InterruptManagerLow 0050                           l530 10B6  
                         l535 10CA                           l529 10B6        ??_InterruptManagerHigh 0050  
   _RB5_InterruptHandler_HIGH 003D                           wreg 0FE8                          l2135 10B2  
                        _LATA 0F89                          _LATB 0F8A                          _LATC 0F8B  
                        _LATD 0F8C                          _LATE 0F8D      _RB4_InterruptHandler_LOW 003F  
                        _main 10B2                   ?i2_INT2_ISR 0050      _RB7_InterruptHandler_LOW 0033  
                        fsr1l 0FE1                          btemp 0051                          start 0046  
                ___param_bank 0000              __end_of_INT0_ISR 10CA              __end_of_INT2_ISR 10C2  
                       ?_main 0050                         _EEADR 0FA9                         i1l345 10C0  
                       i1l522 003E                         i2l512 1022                         i2l337 10C8  
                       i2l345 10C4                         i2l515 1042                         _PORTA 0F80  
                       _PORTB 0F81                         _PORTC 0F82                         _PORTD 0F83  
                       _PORTE 0F84                         _TRISA 0F92                         _TRISB 0F93  
                       _TRISC 0F94                         _TRISD 0F95                         _TRISE 0F96  
                       __Init 10CA                         tablat 0FF5                         ttemp5 0052  
                       ttemp6 0055                         ttemp7 0059                         wtemp8 0052  
             __initialization 1046                  __end_of_main 10BE                        ??_main 0051  
               __activetblptr 0002                        ?__Init 0050                        _EEADRH 0FAA  
                      _EEDATA 0FA8                        _EECON2 0FA7                        i1l2131 002C  
                      i1l2133 003A                        i1l1271 10BE                        i1l2129 001E  
                      i2l1311 10C2                        i2l2121 1010                        i2l2123 101E  
                      i2l2125 1030                        i2l2127 103E                        i2l2119 1002  
                      i2l1267 10C6                        clear_0 106C                        isa$std 0001  
                __pdataCOMRAM 0001                  __mediumconst 0000             ECU_LED_Init@F3310 004F  
                      tblptrh 0FF7                        tblptrl 0FF6                        tblptru 0FF8  
                  __accesstop 0060       __end_of__initialization 1072                     ?_INT0_ISR 0050  
                   ?_INT2_ISR 0050                 ___rparam_used 0001                __pcstackCOMRAM 0050  
               __end_of__Init 10CC                       ??__Init 0051         _INT0_InterruptHandler 0047  
                  ??_INT0_ISR 0050                  ??i2_INT2_ISR 0050                    ??_INT2_ISR 0050  
         ECU_LED_TOGGLE@F3325 004C   __end_of_InterruptManagerLow 0046                       _LAT_REG 001B  
          __end_ofi2_INT2_ISR 10C6     _RB6_InterruptHandler_HIGH 0039           ECU_RELAY_Init@F3304 004B  
    _RB6_InterruptHandler_LOW 0037                       __Hparam 0000                       __Lparam 0000  
                __psmallconst 1000                       __pcinit 1046                       __ramtop 1000  
                     __ptext0 10B2                       __ptext1 10CA                       __ptext3 10BE  
                     __ptext5 10C2                       __ptext6 10C6                __pintcode_body 1002  
        end_of_initialization 1072                 __Lmediumconst 0000                       int_func 1002  
                     postdec1 0FE5                       postinc0 0FEE         _INT1_InterruptHandler 0045  
             ECU_LED_ON@F3315 004E                 __pidataCOMRAM 1080            ECU_RELAY_OFF@F3314 0049  
         start_initialization 1046            ECU_RELAY_ONN@F3309 004A                   __pbssCOMRAM 0033  
       _INT2_InterruptHandler 0043  __end_of_InterruptManagerHigh 1046                     __pintcode 0008  
                 __pintcodelo 0018                   __smallconst 1000     _RB4_InterruptHandler_HIGH 0041  
   _RB7_InterruptHandler_HIGH 0035      _RB5_InterruptHandler_LOW 003B                      _INT0_ISR 10C6  
                    _INT2_ISR 10BE                      _RB4_Flag 0032                      _RB5_Flag 0031  
                    _RB6_Flag 0030                      _RB7_Flag 002F                      i1u106_20 002C  
                    i1u106_21 0028                      i1u107_20 003A                      i1u107_21 0036  
                    i2u102_40 1010                      i2u102_41 100C                      i2u103_40 101E  
                    i2u103_41 101A                      i2u104_40 1030                      i2u104_41 102C  
                    i2u105_40 103E                      i2u105_41 103A             _keypad_btn_values 0001  
                    _PORT_REG 0011                      _TRIS_REG 0025                   _INTCON2bits 0FF1  
                 _INTCON3bits 0FF0                     copy_data0 105A                    _EECON1bits 0FA6  
                    __Hrparam 0000                      __Lrparam 0000          _InterruptManagerHigh 0008  
                    isa$xinst 0000                      int$flags 0051                    _INTCONbits 0FF2  
       ?_InterruptManagerHigh 0050                      intlevel1 0000                      intlevel2 0000  
         _InterruptManagerLow 0018                    i2_INT2_ISR 10C2          ?_InterruptManagerLow 0050  
            ECU_LED_OFF@F3320 004D  
